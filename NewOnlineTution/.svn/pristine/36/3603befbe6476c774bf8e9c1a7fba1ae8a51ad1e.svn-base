package com.itpanda.tution.restController;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.itpanda.tution.Constant;
import com.itpanda.tution.SendEmail;
import com.itpanda.tution.entity.ClassJoin;
import com.itpanda.tution.entity.Classes;
import com.itpanda.tution.entity.Teacher;
import com.itpanda.tution.loginSecurity.repository.UserRepository;
import com.itpanda.tution.model.TeacherModel;
import com.itpanda.tution.model.UserDTO;
import com.itpanda.tution.repository.ClassJoinRepository;
import com.itpanda.tution.service.ClassJoinService;
import com.itpanda.tution.service.ClassService;
import com.itpanda.tution.service.TeacherService;

@RestController
public class mainRestController {

	@Autowired
	ClassJoinService classJoinService;
	
	@Autowired
	ClassJoinRepository classJoinRepository;
	
	@Autowired
	ClassService classService;
	
	@Autowired
	UserRepository userRepository;
	
	@Autowired
	SendEmail sendEmail;
	
	@Autowired
	TeacherService teacherService;
	
	// accept bank slips 
	@CrossOrigin
	@PutMapping("/acceptslip")
	public void acceptBankSlips(@RequestBody ClassJoin classJoin) {
		
		
		Optional<ClassJoin> classJoinDetails;
		Optional<Classes> classDetails;
		
		classJoinService.updateBankSlipStatus(Constant.CL_JOIN_STATUS_COMPLETE, classJoin.getClJoinId());
		classJoinDetails=classJoinRepository.findById(classJoin.getClJoinId());
	   classDetails=Optional.ofNullable(classService.getClassByClassId(classJoinDetails.get().getClasses().getClassId()));
		sendEmail.sendEmail(userRepository.findById(classJoinDetails.get().getUser().getId()).get().getUsername(), userRepository.findById(classJoinDetails.get().getUser().getId()).get().getFirstName(),classDetails.get().getJoinUrl());
		//sendEmail.sendEmail("dhanushkapraeepcreations@gmail.com","dhanushka","www.google.com");
		//System.out.println(classJoin.getClJoinId());
	}
	
	@CrossOrigin
	@PutMapping("/changetopendingslip")
	public void changeToPendingtBankSlips(@RequestBody ClassJoin classJoin) {
		
		
		classJoinService.updateBankSlipStatus(Constant.CL_JOIN_STATUS_PENDING, classJoin.getClJoinId());
		
		//System.out.println(classJoin.getClJoinId());
	}
	
	@CrossOrigin
	@PutMapping("/updateinscharg")
	public void updateInstituteCharge(@RequestBody Teacher teacher) {
		
	  teacherService.updateInsCharge(teacher.getInsChargePercentage(), teacher.getTeacherId());
	}
	
	// update zoom urls
	@CrossOrigin
	@PutMapping("/updatezoomurls")
	public void updateZoomUrls(@RequestBody Classes classes) {
		
		classService.updateZoomUrls(classes.getJoinUrl(), classes.getStartUrl(), classes.getClassId());
	}
	
	// update zoom urls
		@CrossOrigin
		@PutMapping("/updatebankdetails")
		public String updateBankDetails(@RequestBody Teacher teacher) {
			
			
			try {
				teacherService.updateBankDetails(teacher.getBank(), teacher.getBranch(), teacher.getAccountNumber(), teacher.getTeacherId());
				return "success";
			} catch (Exception e) {
				System.out.println("update bank details: "+e);
				return "error";
			}
			
		}
	
}
